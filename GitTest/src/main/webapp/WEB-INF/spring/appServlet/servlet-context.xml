<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

 xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

 xmlns:context="http://www.springframework.org/schema/context"

 xsi:schemaLocation="http://www.springframework.org/schema/mvc 

      http://www.springframework.org/schema/mvc/spring-mvc.xsd

      http://www.springframework.org/schema/beans 

      http://www.springframework.org/schema/beans/spring-beans.xsd

      http://www.springframework.org/schema/context 

      http://www.springframework.org/schema/context/spring-context.xsd">




 <!-- DispatcherServlet Context: defines this servlet's request-processing 

  infrastructure -->




 <!-- Enables the Spring MVC @Controller programming model -->

 <mvc:annotation-driven />




 <context:component-scan base-package="com.practice.project"

  use-default-filters="false">

  <context:include-filter type="annotation"

   expression="org.springframework.stereotype.Controller" />

 </context:component-scan>




 <!-- Handles HTTP GET requests for /resources/** by efficiently serving 

  up static resources in the ${webappRoot}/resources directory -->

 <mvc:resources mapping="/resources/**" location="/resources/" />




 <mvc:interceptors>

  <mvc:interceptor>

   <mvc:mapping path="/friend/**" />

   <bean class="com.practice.project.interceptor.CommonInterceptor" /> 

  </mvc:interceptor>

 </mvc:interceptors>

<mvc:interceptors>

  <mvc:interceptor>

   <mvc:mapping path="/service/**" />

   <bean class="com.practice.project.interceptor.CommonInterceptor" /> 

  </mvc:interceptor>

 </mvc:interceptors>

 <!-- Resolves views selected for rendering by @Controllers to .jsp resources 

  in the /WEB-INF/views directory -->

 <bean

  class="org.springframework.web.servlet.view.InternalResourceViewResolver">

  <property name="prefix" value="/WEB-INF/views/" />

  <property name="suffix" value=".jsp" />

 </bean>

 <!-- <context:component-scan base-package="com.practice.project"></context:component-scan> -->


</beans>

